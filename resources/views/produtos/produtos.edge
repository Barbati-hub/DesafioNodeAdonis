@layout('layouts/app')

@section('title')
üì¶ Gerenciamento de Produtos
@endsection

@section('content')
  <div class="bg-white p-6 shadow-lg rounded-lg">
    <h2 class="text-2xl font-semibold text-gray-800 flex items-center gap-2">
      <i data-lucide="package"></i> Produtos Cadastrados
    </h2>
    <p class="text-gray-600 mt-2">Gerencie os produtos cadastrados no sistema.</p>

    <!-- Bot√£o para adicionar novo produto -->
    <div class="flex justify-end mt-4">
      <a href="/produtos/novo" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md flex items-center gap-2 transition">
        <i data-lucide="plus"></i> Adicionar Produto
      </a>
    </div>

    <!-- Lista de Produtos -->
    <div class="mt-8 bg-white p-6 shadow-lg rounded-xl border border-gray-200">
      <table class="w-full border-collapse bg-white rounded-lg shadow-md">
        <thead>
          <tr class="bg-gray-200 text-gray-700">
            <th class="p-3 text-left border">ID</th>
            <th class="p-3 text-left border">Nome</th>
            <th class="p-3 text-left border">Descri√ß√£o</th>
            <th class="p-3 text-left border">Pre√ßo</th>
            <th class="p-3 text-left border">Quantidade</th>
            <th class="p-3 text-center border">A√ß√µes</th>
          </tr>
        </thead>
        <tbody>
          @if(produtos.length > 0)
            @each(produto in produtos)
              <tr id="produto-{{ produto.id }}" class="hover:bg-gray-100 transition">
                <td class="border p-3">{{ produto.id }}</td>
                <td class="border p-3 font-medium">{{ produto.nome }}</td>
                <td class="border p-3 text-gray-600">{{ produto.descricao }}</td>
                <td class="border p-3 text-green-700 font-semibold">R$ {{ produto.preco.toFixed(2) }}</td>
                <td class="border p-3 text-center">{{ produto.quantidade }}</td>
                <td class="border p-3 flex justify-center space-x-2">
                  <a href="/produtos/{{ produto.id }}/editar" class="bg-yellow-500 text-white px-3 py-1 rounded-md flex items-center gap-2 hover:bg-yellow-600 transition">
                    <i data-lucide="edit"></i> Editar
                  </a>
                  <button onclick="deletarProduto({{ produto.id }})"
                    class="bg-red-500 text-white px-3 py-1 rounded-md flex items-center gap-2 hover:bg-red-600 transition">
                    <i data-lucide="trash-2"></i> Remover
                  </button>
                </td>
              </tr>
            @endeach
          @else
            <tr>
              <td colspan="6" class="text-center p-4 text-gray-500">Nenhum produto cadastrado.</td>
            </tr>
          @endif
        </tbody>
      </table>
    </div>
  </div>
@endsection

@section('scripts')
<script>
  async function deletarProduto(id) {
    const confirmacao = await Swal.fire({
      title: "üóëÔ∏è Confirmar Exclus√£o",
      text: "Tem certeza que deseja remover este produto?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Sim, excluir!",
      cancelButtonText: "Cancelar"
    });

    if (!confirmacao.isConfirmed) {
      return;
    }

    try {
      const response = await fetch(`/produtos/${id}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" }
      });

      const result = await response.json();

      if (response.ok) {
        document.getElementById(`produto-${id}`).remove();
        Swal.fire({
          title: "‚úÖ Produto exclu√≠do!",
          text: "O produto foi removido com sucesso.",
          icon: "success",
          timer: 2000,
          showConfirmButton: false
        });

      } else {
        Swal.fire({
          title: "‚ùå Erro!",
          text: result.error || "Erro ao deletar o produto.",
          icon: "error",
          timer: 3000
        });
      }
    } catch (error) {
      Swal.fire({
        title: "‚ùå Erro!",
        text: "Erro na conex√£o com o servidor.",
        icon: "error",
        timer: 3000
      });
    }
  }
</script>
@endsection
