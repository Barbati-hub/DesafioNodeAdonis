@layout('layouts/main')

@section('title')
Carrinho de Compras
@endsection

@section('content')
<div class="container mx-auto px-4 py-8">
  <h1 class="text-2xl font-bold mb-8">Carrinho de Compras</h1>

  @if(itens && itens.length > 0)
    <div class="bg-white rounded-lg shadow-lg p-6">
      <!-- Lista de Produtos -->
      <div class="space-y-6">
        @each(item in itens)
          <div class="flex items-center space-x-4 py-4 border-b last:border-b-0">
            <!-- Imagem do Produto -->
            <div class="w-24 h-24 flex-shrink-0">
              @if(item.produto.imagem_url)
                <img src="{{ item.produto.imagem_url }}" alt="{{ item.produto.nome }}" class="w-full h-full object-cover rounded-lg">
              @else
                <div class="w-full h-full bg-gray-200 rounded-lg flex items-center justify-center">
                  <i class="fas fa-image text-gray-400 text-2xl"></i>
                </div>
              @endif
            </div>

            <!-- Informações do Produto -->
            <div class="flex-grow">
              <h3 class="text-lg font-semibold">{{ item.produto.nome }}</h3>
              <p class="text-gray-600">Preço unitário: {{ item.produto.preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' }) }}</p>
            </div>

            <!-- Controles de Quantidade -->
            <div class="flex items-center space-x-2">
              <button onclick="updateQuantity({{ item.produto.id }}, {{ item.quantidade - 1 }})" 
                      class="w-8 h-8 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center">
                <i class="fas fa-minus"></i>
              </button>
              <span class="w-12 text-center">{{ item.quantidade }}</span>
              <button onclick="updateQuantity({{ item.produto.id }}, {{ item.quantidade + 1 }})"
                      class="w-8 h-8 rounded-full bg-gray-200 hover:bg-gray-300 flex items-center justify-center">
                <i class="fas fa-plus"></i>
              </button>
            </div>

            <!-- Subtotal -->
            <div class="w-32 text-right">
              <p class="font-semibold">{{ item.subtotalFormatado }}</p>
            </div>

            <!-- Botão Remover -->
            <button onclick="removeFromCart({{ item.produto.id }})" 
                    class="text-red-500 hover:text-red-700">
              <i class="fas fa-trash"></i>
            </button>
          </div>
        @endeach
      </div>

      <!-- Total e Botões -->
      <div class="mt-8 flex justify-between items-center">
        <div class="text-xl font-bold">
          Total: {{ totalFormatado }}
        </div>
        <div class="space-x-4">
          <a href="/" class="inline-block px-6 py-3 bg-gray-200 hover:bg-gray-300 rounded-lg text-gray-800">
            Continuar Comprando
          </a>
          <button onclick="finalizarCompra()" 
                  class="px-6 py-3 bg-[#FF6500] hover:bg-[#e65c00] text-white rounded-lg">
            Finalizar Compra
          </button>
        </div>
      </div>
    </div>
  @else
    <!-- Carrinho Vazio -->
    <div class="bg-white rounded-lg shadow-lg p-8 text-center">
      <i class="fas fa-shopping-cart text-gray-400 text-5xl mb-4"></i>
      <p class="text-xl text-gray-600 mb-4">Seu carrinho está vazio</p>
      <a href="/" class="inline-block px-6 py-3 bg-[#FF6500] hover:bg-[#e65c00] text-white rounded-lg">
        Começar a Comprar
      </a>
    </div>
  @endif
</div>

<!-- Toast de Notificação -->
<div id="toast" class="fixed bottom-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg transform translate-y-full opacity-0 transition-all duration-300">
  <div class="flex items-center">
    <i class="fas fa-check-circle mr-2"></i>
    <span id="toastMessage"></span>
  </div>
</div>

<script>
async function updateQuantity(productId, newQuantity) {
  try {
    const response = await fetch('/carrinho/atualizar', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        produtoId: productId,
        quantidade: newQuantity
      })
    });

    const data = await response.json();
    
    if (response.ok) {
      location.reload(); // Recarrega a página para atualizar os valores
    } else {
      showToast('❌ ' + data.error);
    }
  } catch (error) {
    console.error('Erro ao atualizar quantidade:', error);
    showToast('❌ Erro ao atualizar quantidade');
  }
}

async function removeFromCart(productId) {
  try {
    const response = await fetch(`/carrinho/${productId}`, {
      method: 'DELETE'
    });

    const data = await response.json();
    
    if (response.ok) {
      location.reload(); // Recarrega a página para atualizar os valores
    } else {
      showToast('❌ ' + data.error);
    }
  } catch (error) {
    console.error('Erro ao remover item:', error);
    showToast('❌ Erro ao remover item do carrinho');
  }
}

function finalizarCompra() {
  // TODO: Implementar a finalização da compra
  alert('Funcionalidade em desenvolvimento');
}

function showToast(message) {
  const toast = document.getElementById('toast');
  const toastMessage = document.getElementById('toastMessage');
  
  // Ajusta a cor do toast baseado no tipo de mensagem
  if (message.startsWith('❌')) {
    toast.classList.remove('bg-green-500');
    toast.classList.add('bg-red-500');
  } else {
    toast.classList.remove('bg-red-500');
    toast.classList.add('bg-green-500');
  }
  
  toastMessage.textContent = message;
  toast.classList.remove('translate-y-full', 'opacity-0');
  
  setTimeout(() => {
    toast.classList.add('translate-y-full', 'opacity-0');
  }, 3000);
}
</script>
@endsection 