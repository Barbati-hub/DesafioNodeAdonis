@layout('layouts/main')

@section('content')
<div class="container mx-auto px-4 py-8">
  <h1 class="text-2xl font-bold mb-6">Carrinho de Compras</h1>

  <div id="cartContainer" class="bg-white rounded-lg shadow-lg p-6">
    <!-- Lista de Itens -->
    <div id="cartItems" class="divide-y divide-gray-200">
      <!-- Items will be dynamically inserted here -->
    </div>

    <!-- Total e Checkout -->
    <div class="mt-8 border-t pt-8">
      <div class="flex justify-between items-center">
        <span class="text-xl font-medium">Total:</span>
        <span id="cartTotal" class="text-2xl font-bold text-[#FF6500]">R$ 0,00</span>
      </div>
      <button id="finalizarCompraBtn"
              class="mt-6 w-full bg-[#FF6500] text-white py-3 px-4 rounded-md hover:bg-[#e65c00] transition-colors">
        Finalizar Compra
      </button>
    </div>
  </div>
</div>

<!-- Toast de Notificação -->
<div id="toast" class="fixed bottom-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg transform translate-y-full opacity-0 transition-all duration-300">
  <div class="flex items-center">
    <i class="fas fa-check-circle mr-2"></i>
    <span id="toastMessage"></span>
  </div>
</div>

@end

@section('scripts')
<script>
// Garante que o código só executa depois que o DOM estiver carregado
document.addEventListener('DOMContentLoaded', function() {
    // Estado do carrinho
    let cart = JSON.parse(localStorage.getItem('cart')) || [];
    console.log('Carrinho carregado:', cart);

    // Função para atualizar a UI do carrinho
    function updateCartUI() {
        console.log('Atualizando UI com carrinho:', cart);
        const cartContainer = document.getElementById('cartContainer');
        const cartItems = document.getElementById('cartItems');
        const cartTotal = document.getElementById('cartTotal');

        if (!cart || cart.length === 0) {
            cartContainer.innerHTML = `
                <div class="text-center py-8">
                    <i class="fas fa-shopping-cart text-gray-400 text-5xl mb-4"></i>
                    <p class="text-xl text-gray-600">Seu carrinho está vazio</p>
                    <a href="/" class="mt-4 inline-block bg-[#FF6500] text-white py-2 px-4 rounded-md hover:bg-[#e65c00] transition-colors">
                        Continuar Comprando
                    </a>
                </div>
            `;
            return;
        }

        cartItems.innerHTML = '';
        let total = 0;

        cart.forEach(item => {
            const itemTotal = parseFloat(item.preco) * item.quantidade;
            total += itemTotal;

            const itemElement = document.createElement('div');
            itemElement.className = 'py-6 flex items-center';
            itemElement.innerHTML = `
                <div class="flex-shrink-0 w-24 h-24">
                    ${item.imagem_url ? 
                        `<img src="${item.imagem_url}" alt="${item.nome}" class="w-full h-full object-cover rounded-lg">` :
                        `<div class="w-full h-full bg-gray-200 rounded-lg flex items-center justify-center">
                            <i class="fas fa-image text-gray-400 text-2xl"></i>
                        </div>`
                    }
                </div>
                <div class="ml-6 flex-1">
                    <h3 class="text-lg font-medium text-gray-900">${item.nome}</h3>
                    <p class="text-sm text-gray-500">${item.descricao || ''}</p>
                    <div class="mt-2 flex items-center">
                        <span class="text-gray-600 mr-4">Quantidade:</span>
                        <div class="flex items-center border rounded-md">
                            <button data-id="${item.id}" data-action="decrease" 
                                    class="px-3 py-1 text-gray-600 hover:bg-gray-100">
                                -
                            </button>
                            <span class="px-3 py-1 border-x">${item.quantidade}</span>
                            <button data-id="${item.id}" data-action="increase"
                                    class="px-3 py-1 text-gray-600 hover:bg-gray-100">
                                +
                            </button>
                        </div>
                    </div>
                </div>
                <div class="ml-6">
                    <p class="text-lg font-medium text-[#FF6500]">R$ ${itemTotal.toFixed(2)}</p>
                    <button data-id="${item.id}" data-action="remove"
                            class="mt-2 text-sm text-red-600 hover:text-red-800">
                        Remover
                    </button>
                </div>
            `;
            cartItems.appendChild(itemElement);
        });

        if (cartTotal) {
            cartTotal.textContent = `R$ ${total.toFixed(2)}`;
        }
    }

    // Função para atualizar quantidade
    function atualizarQuantidade(produtoId, novaQuantidade) {
        console.log('Atualizando quantidade:', produtoId, novaQuantidade);
        if (novaQuantidade < 1) {
            removerItem(produtoId);
            return;
        }

        const item = cart.find(item => item.id === produtoId);
        if (item) {
            item.quantidade = novaQuantidade;
            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartUI();
            showToast('Quantidade atualizada com sucesso');
        }
    }

    // Função para remover item
    function removerItem(produtoId) {
        console.log('Removendo item:', produtoId);
        cart = cart.filter(item => item.id !== produtoId);
        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartUI();
        showToast('Item removido do carrinho');
    }

    // Função para finalizar compra
    function finalizarCompra() {
        if (!cart || cart.length === 0) {
            showToast('Seu carrinho está vazio', 'error');
            return;
        }
        // Implementar a finalização da compra
        alert('Funcionalidade em desenvolvimento');
    }

    // Função para mostrar toast
    function showToast(message, type = 'success') {
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toastMessage');
        
        toast.classList.remove('translate-y-full', 'opacity-0');
        toast.classList.remove('bg-green-500', 'bg-red-500');
        toast.classList.add(type === 'success' ? 'bg-green-500' : 'bg-red-500');
        
        toastMessage.textContent = message;
        
        setTimeout(() => {
            toast.classList.add('translate-y-full', 'opacity-0');
        }, 3000);
    }

    // Event Listeners
    document.getElementById('cartItems').addEventListener('click', function(e) {
        const button = e.target.closest('button');
        if (!button) return;

        const { id, action } = button.dataset;
        if (!id || !action) return;

        const produtoId = parseInt(id);

        switch(action) {
            case 'increase':
                const itemIncrease = cart.find(item => item.id === produtoId);
                if (itemIncrease) {
                    atualizarQuantidade(produtoId, itemIncrease.quantidade + 1);
                }
                break;
            case 'decrease':
                const itemDecrease = cart.find(item => item.id === produtoId);
                if (itemDecrease) {
                    atualizarQuantidade(produtoId, itemDecrease.quantidade - 1);
                }
                break;
            case 'remove':
                removerItem(produtoId);
                break;
        }
    });

    document.getElementById('finalizarCompraBtn').addEventListener('click', finalizarCompra);

    // Inicializar a UI do carrinho
    updateCartUI();
});
</script>
@end 